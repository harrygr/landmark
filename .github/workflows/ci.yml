name: CI

on: [push, pull_request]

jobs:
  test:
    name: Test (Elixir ${{matrix.elixir}} | Erlang/OTP ${{matrix.otp}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.17.x
            otp: 27
          - elixir: 1.14.x
            otp: 26

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v4

      - name: Install OTP and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - uses: actions/cache@v4
        id: deps-cache
        with:
          path: deps
          key: mix-${{ runner.os }}-${{matrix.otp}}-${{matrix.elixir}}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v4
        id: build-cache
        with:
          path: _build
          key: build-${{ runner.os }}-${{matrix.otp}}-${{matrix.elixir}}${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install dependencies
        run: mix deps.get --only test

      - name: Run tests
        run: mix test --trace

  publish:
    name: Publish to Hex
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install OTP and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 27
          elixir-version: 1.17.x

      - name: Check for version bump
        id: check_version
        run: |
          # Extract version from mix.exs before and after the change
          OLD_VERSION=$(git show HEAD~1:mix.exs | grep version | sed -E 's/.*version: "([^"]+)".*/\1/')
          NEW_VERSION=$(grep version mix.exs | sed -E 's/.*version: "([^"]+)".*/\1/')

          echo "Previous version: $OLD_VERSION"
          echo "Current version: $NEW_VERSION"

          # Compare versions
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "Version changed from $OLD_VERSION to $NEW_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Restore dependencies cache
        if: steps.check_version.outputs.version_changed == 'true'
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-27-1.17.x-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: mix-${{ runner.os }}-27-1.17.x-

      - name: Install dependencies
        if: steps.check_version.outputs.version_changed == 'true'
        run: mix deps.get

      - name: Publish to Hex
        if: steps.check_version.outputs.version_changed == 'true'
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: mix hex.publish --yes
